{"ast":null,"code":"var _jsxFileName = \"/Users/vidyas/Downloads/IIT_Courses/Fall_2021/CSP_584_EWA/Assignments/Bonus_Assign_2/Bonus_Assignment_2_Sudharshana, Vidya/Chicago_SocialHub_React/frontend_react/src/components/smaChart.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Button, Input } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faChartBar, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Header from \"./header\";\nimport { Table } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction movingAverage(data, hourinterval) {\n  var arr = [];\n  data.map((row, index, total) => {\n    const endindex = total.length - index - 1;\n    var startindex = endindex;\n    const endtime = total[endindex].lastCommunicationTime;\n    var starttime = new Date(endtime);\n    starttime.setHours(starttime.getHours() - hourinterval);\n    var timelimit = new Date(total[total.length - 1].lastCommunicationTime);\n    timelimit.setHours(timelimit.getHours() - 168);\n    var lastCommTime = total[startindex].lastCommunicationTime.toString();\n    var lastCommTime_Date = new Date(lastCommTime);\n    var end_time = total[endindex].lastCommunicationTime.toString();\n    var end_time_Date = new Date(end_time);\n    var sum = 0;\n    var count = 0;\n\n    while (total[startindex] != undefined && lastCommTime_Date > starttime) {\n      sum += total[startindex].availableDocks;\n      count++;\n      startindex--;\n    }\n\n    if (end_time_Date > timelimit) {\n      var avg = sum / count;\n\n      if (total[startindex] != undefined) {\n        startindex++;\n      }\n\n      arr.push({\n        lastCommunicationTime: total[endindex].lastCommunicationTime,\n        availableDocks: avg\n      });\n    }\n  }); // console.log(\"hello.....+++++++++++\", arr);\n\n  return arr;\n}\n\nclass SMAChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moveToHome: false,\n      movetoStations: false,\n      stations: [],\n      data: {\n        labels: [\"Time\"],\n        datasets: [{\n          label: 'Real-Time Data',\n          fill: false,\n          lineTension: 0.1,\n          data: [65, 59, 80],\n          backgroundColor: 'rgb(255, 165, 0)',\n          borderColor: 'rgba(255, 165, 0)'\n        }, {\n          label: 'SMA 1-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: [40, 0.5, 0.2],\n          backgroundColor: 'green',\n          borderColor: 'green'\n        }, {\n          label: 'SMA 24-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: [20, 0, 0.8],\n          backgroundColor: 'red',\n          borderColor: 'red'\n        }],\n        hour: '1 HOUR'\n      }\n    };\n  }\n\n  componentDidMount() {\n    let comp = this;\n    let realTimeChartData = this.props.location.state.realTimeChartData;\n    let sma1ChartData = this.props.location.state.sma1ChartData;\n    let sma24ChartData = this.props.location.state.sma24ChartData;\n    let labels = [];\n    let availableDocks = [];\n    let sma1Value = [];\n    let sma24Value = [];\n\n    for (let i = 0; i < realTimeChartData.length; i++) {\n      labels.push(realTimeChartData[i].lastCommunicationTime.toString().substring(11, 19));\n      availableDocks.push(realTimeChartData[i].availableDocks);\n    }\n\n    for (let i = 0; i < sma1ChartData.length; i++) {\n      sma1Value.push(sma1ChartData[i].availableDocks);\n    }\n\n    for (let i = 0; i < sma24ChartData.length; i++) {\n      sma24Value.push(sma24ChartData[i].availableDocks);\n    }\n\n    labels.reverse();\n    availableDocks.reverse();\n    sma1Value.reverse();\n    sma24Value.reverse();\n    comp.setState({\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Real-Time Data',\n          fill: false,\n          lineTension: 0.1,\n          data: availableDocks,\n          backgroundColor: 'rgb(255, 165, 0)',\n          borderColor: 'rgba(255, 165, 0)'\n        }, {\n          label: 'SMA 1-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: sma1Value,\n          backgroundColor: 'green',\n          borderColor: 'green'\n        }, {\n          label: 'SMA 24-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: sma24Value,\n          backgroundColor: 'red',\n          borderColor: 'red'\n        }]\n      }\n    });\n  }\n\n  handleHourChange(e) {\n    let value = e.target.value;\n    let comp = this;\n\n    var axios = require('axios');\n\n    var data = JSON.stringify({\n      \"placeName\": this.props.location.state.stationName,\n      \"timeRange\": value\n    });\n    var config = {\n      method: 'post',\n      url: 'http://localhost:4000/stations/getdocks',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      // console.log(JSON.stringify(response.data));\n      let sma1 = movingAverage(response.data, 1);\n      let sma24 = movingAverage(sma1, 24);\n      let labels = [];\n      let availableDocks = [];\n      let sma1Value = [];\n      let sma24Value = [];\n\n      for (let i = 0; i < response.data.length; i++) {\n        labels.push(response.data[i].lastCommunicationTime.toString().substring(11, 19));\n        availableDocks.push(response.data[i].availableDocks);\n      }\n\n      for (let i = 0; i < sma1.length; i++) {\n        sma1Value.push(sma1[i].availableDocks);\n      }\n\n      for (let i = 0; i < sma24.length; i++) {\n        sma24Value.push(sma24[i].availableDocks);\n      }\n\n      labels.reverse();\n      availableDocks.reverse(); // sma1Value.reverse()\n\n      sma24Value.reverse();\n      comp.setState({\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Real-Time Data',\n            fill: false,\n            lineTension: 0.1,\n            data: availableDocks,\n            backgroundColor: 'rgb(255, 165, 0)',\n            borderColor: 'rgba(255, 165, 0)',\n            backgroundColor: '#edfce9',\n            borderColor: '#3DAA1D',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: '#3DAA1D',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: '#3DAA1D',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10\n          }, {\n            label: 'SMA 1-hour',\n            fill: false,\n            lineTension: 0.1,\n            data: sma1Value,\n            backgroundColor: 'green',\n            borderColor: 'green'\n          }, {\n            label: 'SMA 24-hour',\n            fill: false,\n            lineTension: 0.1,\n            data: sma24Value,\n            backgroundColor: 'red',\n            borderColor: 'red'\n          }]\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  moveToHomePage() {\n    this.setState({\n      moveToHome: true\n    });\n  }\n\n  moveToListOfStations() {\n    this.setState({\n      movetoStations: true\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.moveToHome ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 41\n      }, this) : null, this.state.movetoStations ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/list_of_stations\",\n          state: {\n            stations: this.props.location.state.stations,\n            places: this.props.location.state.places,\n            find: this.props.location.state.find,\n            where: this.props.location.state.where\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                backgroundColor: \"#191970\"\n              },\n              onClick: this.moveToHomePage.bind(this),\n              children: [\"Home\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faHome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 160\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 123\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                backgroundColor: \"#191970\"\n              },\n              onClick: this.moveToListOfStations.bind(this),\n              children: [\"Go Back \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faArrowLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 170\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 133\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              value: this.state.hour,\n              style: {\n                border: \"none\",\n                borderBottom: \"1px solid black\"\n              },\n              name: \"hour\",\n              onChange: this.handleHourChange.bind(this),\n              placeholder: \"Hour\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1 HOUR\",\n                children: \"Past Hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"24 HOUR\",\n                children: \"Last 24 Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7 DAY\",\n                children: \"Last 7 Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Divvy Dock Station: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: 8,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Line, {\n                    data: this.state.data // Height of graph\n                    ,\n                    height: 600,\n                    options: {\n                      maintainAspectRatio: false,\n                      scales: {\n                        yAxes: [{\n                          scaleLabel: {\n                            display: true,\n                            labelString: 'Available Docks'\n                          },\n                          ticks: {\n                            beginAtZero: true\n                          },\n                          gridLines: {\n                            display: true\n                          }\n                        }],\n                        xAxes: [{\n                          scaleLabel: {\n                            display: true,\n                            labelString: 'Time'\n                          },\n                          gridLines: {\n                            display: true\n                          }\n                        }]\n                      },\n                      legend: {\n                        labels: {\n                          fontSize: 15\n                        }\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SMAChart;","map":{"version":3,"sources":["/Users/vidyas/Downloads/IIT_Courses/Fall_2021/CSP_584_EWA/Assignments/Bonus_Assign_2/Bonus_Assignment_2_Sudharshana, Vidya/Chicago_SocialHub_React/frontend_react/src/components/smaChart.js"],"names":["React","Component","Row","Col","Button","Input","FontAwesomeIcon","faArrowLeft","faChartBar","faHome","Header","Table","Redirect","Line","movingAverage","data","hourinterval","arr","map","row","index","total","endindex","length","startindex","endtime","lastCommunicationTime","starttime","Date","setHours","getHours","timelimit","lastCommTime","toString","lastCommTime_Date","end_time","end_time_Date","sum","count","undefined","availableDocks","avg","push","SMAChart","constructor","props","state","moveToHome","movetoStations","stations","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","hour","componentDidMount","comp","realTimeChartData","location","sma1ChartData","sma24ChartData","sma1Value","sma24Value","i","substring","reverse","setState","handleHourChange","e","value","target","axios","require","JSON","stringify","stationName","config","method","url","headers","then","response","sma1","sma24","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","catch","error","console","log","moveToHomePage","moveToListOfStations","handleChange","name","render","pathname","places","find","where","textAlign","padding","bind","marginLeft","border","borderBottom","maintainAspectRatio","scales","yAxes","scaleLabel","display","labelString","ticks","beginAtZero","gridLines","xAxes","legend","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Button, Input} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faChartBar, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Header from \"./header\";\nimport { Table } from \"reactstrap\"\nimport {Redirect} from 'react-router-dom'\nimport { Line } from \"react-chartjs-2\";\n\nfunction movingAverage(data, hourinterval) {\n    var arr = []\n    data.map((row, index, total) => {\n\n        const endindex = total.length - index - 1\n        var startindex = endindex\n        const endtime = total[endindex].lastCommunicationTime\n        var starttime = new Date(endtime)\n        starttime.setHours(starttime.getHours() - hourinterval)\n        var timelimit = new Date(total[total.length - 1].lastCommunicationTime)\n        timelimit.setHours(timelimit.getHours() - 168);\n        var lastCommTime = total[startindex].lastCommunicationTime.toString();\n        var lastCommTime_Date = new Date(lastCommTime);\n        var end_time = total[endindex].lastCommunicationTime.toString();\n        var end_time_Date = new Date(end_time);\n        var sum = 0\n        var count = 0\n        while (total[startindex] != undefined && lastCommTime_Date > starttime) {\n            sum += total[startindex].availableDocks\n            count++\n            startindex--\n        }\n        if (end_time_Date > timelimit) {\n            var avg = sum / count\n            if (total[startindex] != undefined) {\n                startindex++\n            }\n            arr.push({ lastCommunicationTime: total[endindex].lastCommunicationTime, availableDocks: avg })\n        }\n    });\n    // console.log(\"hello.....+++++++++++\", arr);\n\n    return arr;\n}\n\n\nclass SMAChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            moveToHome: false,\n            movetoStations: false,\n            stations: [],\n            data: {\n                labels: [\"Time\"],\n                datasets: [\n                  {\n                    label: 'Real-Time Data',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: [65, 59, 80],\n                    backgroundColor: 'rgb(255, 165, 0)',\n                    borderColor: 'rgba(255, 165, 0)',\n                  },\n                  {\n                    label: 'SMA 1-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: [40, 0.5,0.2],\n                    backgroundColor: 'green',\n                    borderColor: 'green',\n                  },\n                  {\n                    label: 'SMA 24-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: [20, 0, 0.8],\n                    backgroundColor: 'red',\n                    borderColor: 'red',\n                  },\n                ],\n                hour: '1 HOUR'\n            }\n        }\n    }\n\n    componentDidMount() {\n        let comp = this\n        let realTimeChartData =  this.props.location.state.realTimeChartData\n        let sma1ChartData =  this.props.location.state.sma1ChartData\n        let sma24ChartData =  this.props.location.state.sma24ChartData\n\n        let labels = []\n        let availableDocks = []\n        let sma1Value = []\n        let sma24Value = []\n\n        for (let i=0; i< realTimeChartData.length; i++) {\n            labels.push(realTimeChartData[i].lastCommunicationTime.toString().substring(11, 19))\n            availableDocks.push(realTimeChartData[i].availableDocks)\n        }\n\n        for (let i=0; i< sma1ChartData.length; i++) {\n            sma1Value.push(sma1ChartData[i].availableDocks)\n        }\n\n        for (let i=0; i< sma24ChartData.length; i++) {\n            sma24Value.push(sma24ChartData[i].availableDocks)\n        }\n\n        labels.reverse()\n        availableDocks.reverse()\n        sma1Value.reverse()\n        sma24Value.reverse()\n\n        comp.setState({\n            data: {\n                labels: labels,\n                datasets: [\n                  {\n                    label: 'Real-Time Data',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: availableDocks,\n                    backgroundColor: 'rgb(255, 165, 0)',\n                    borderColor: 'rgba(255, 165, 0)',\n                  },\n                  {\n                    label: 'SMA 1-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: sma1Value,\n                    backgroundColor: 'green',\n                    borderColor: 'green',\n                  },\n                  {\n                    label: 'SMA 24-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: sma24Value,\n                    backgroundColor: 'red',\n                    borderColor: 'red',\n                  },\n                ],\n            }\n        })\n    }\n\n    handleHourChange(e) {\n        let value = e.target.value\n        let comp = this\n\n        var axios = require('axios');\n        var data = JSON.stringify({\n        \"placeName\": this.props.location.state.stationName,\n        \"timeRange\": value\n        });\n\n        var config = {\n        method: 'post',\n        url: 'http://localhost:4000/stations/getdocks',\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        data : data\n        };\n\n        axios(config)\n        .then(function (response) {\n        // console.log(JSON.stringify(response.data));\n        let sma1 = movingAverage(response.data, 1)\n        let sma24 = movingAverage(sma1, 24)\n\n\n\n        let labels = []\n        let availableDocks = []\n        let sma1Value = []\n        let sma24Value = []\n\n        for (let i=0; i< response.data.length; i++) {\n            labels.push(response.data[i].lastCommunicationTime.toString().substring(11, 19))\n            availableDocks.push(response.data[i].availableDocks)\n        }\n\n        for (let i=0; i< sma1.length; i++) {\n            sma1Value.push(sma1[i].availableDocks)\n        }\n\n        for (let i=0; i< sma24.length; i++) {\n            sma24Value.push(sma24[i].availableDocks)\n        }\n\n        labels.reverse()\n        availableDocks.reverse()\n        // sma1Value.reverse()\n        sma24Value.reverse()\n\n\n        comp.setState({\n            data: {\n                labels: labels,\n                datasets: [\n                  {\n                    label: 'Real-Time Data',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: availableDocks,\n                    backgroundColor: 'rgb(255, 165, 0)',\n                    borderColor: 'rgba(255, 165, 0)',\n                    backgroundColor: '#edfce9',\n                    borderColor: '#3DAA1D',\n                    borderCapStyle: 'butt',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: '#3DAA1D',\n                    pointBackgroundColor: '#fff',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: '#3DAA1D',\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                  },\n                  {\n                    label: 'SMA 1-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: sma1Value,\n                    backgroundColor: 'green',\n                    borderColor: 'green',\n                  },\n                  {\n                    label: 'SMA 24-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: sma24Value,\n                    backgroundColor: 'red',\n                    borderColor: 'red',\n                  },\n                ],\n            }\n        })\n        })\n        .catch(function (error) {\n        console.log(error);\n        });\n    }\n\n    moveToHomePage() {\n        this.setState({\n            moveToHome: true\n        })\n    }\n\n    moveToListOfStations() {\n        this.setState({\n            movetoStations: true\n        })\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.moveToHome? <Redirect to = \"/find\" />: null}\n                {this.state.movetoStations? <Redirect to = {{\n                    pathname: \"/list_of_stations\",\n                    state: { stations: this.props.location.state.stations, places: this.props.location.state.places, find: this.props.location.state.find, where: this.props.location.state.where} \n                }} \n                /> :null }\n                <Header />\n                <div style = {{textAlign: \"left\"}}>\n                    <Row>\n                        <Col md = {2} style = {{padding: \"20px\"}}>\n                            <Button style = {{backgroundColor: \"#191970\"}} onClick = {this.moveToHomePage.bind(this)}>Home<span style = {{marginLeft: \"10px\"}}><FontAwesomeIcon icon = {faHome} /></span></Button>\n                        </Col>\n                        <Col md = {8}></Col>\n                        <Col md = {2} style = {{padding: \"20px\"}}>\n                            <Button style = {{backgroundColor: \"#191970\"}} onClick = {this.moveToListOfStations.bind(this)}>Go Back <span style = {{marginLeft: \"10px\"}}><FontAwesomeIcon icon = {faArrowLeft} /></span></Button>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md = {2} style = {{padding: \"20px\"}}>\n                            <Input type = \"select\" value = {this.state.hour} style = {{border: \"none\", borderBottom: \"1px solid black\"}} name=\"hour\" onChange = {this.handleHourChange.bind(this)}  placeholder = \"Hour\">\n                                <option value = \"1 HOUR\">Past Hour</option>\n                                <option value = \"24 HOUR\">Last 24 Hours</option>\n                                <option value = \"7 DAY\">Last 7 Days</option>\n                            </Input>\n                        </Col>\n                    </Row>\n\n                     <div>\n                     <div style = {{padding: \"20px\"}}>\n                         <h6>Divvy Dock Station: </h6>\n\n                    <Row>\n                        <Col md = {8} xs = {12}>\n                        <div>\n                            <Line\n                            data = {this.state.data}\n                            // Height of graph\n                            height={600}\n                            options={{\n                                maintainAspectRatio: false,\n                                scales: {\n                                yAxes: [\n                                    {\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Available Docks'\n                                        },\n                                        ticks: {\n                                            beginAtZero: true,\n                                        },\n                                        gridLines: {\n                                            display: true\n                                        },\n                                    },\n                                    \n                                ],\n                                xAxes: [\n                                    {\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Time'\n                                        },\n                                        gridLines: {\n                                            display: true\n                                        },\n                                    }\n                                ]\n                                },\n                                legend: {\n                                labels: {\n                                    fontSize: 15,\n                                },\n                                },\n                            }}\n                            />\n                        </div>\n                        </Col>\n                    </Row>\n                    \n                    </div>\n                    </div>\n                </div >\n            </div>\n\n        );\n    }\n}\n\nexport default (SMAChart);"]},"metadata":{},"sourceType":"module"}