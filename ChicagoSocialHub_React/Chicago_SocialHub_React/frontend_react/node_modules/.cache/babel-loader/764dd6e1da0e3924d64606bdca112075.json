{"ast":null,"code":"var _jsxFileName = \"/Users/vidyas/Downloads/IIT_Courses/Fall_2021/CSP_584_EWA/Assignments/Bonus_Assign_2/Bonus_Assignment_2_Sudharshana, Vidya/Chicago_SocialHub_React/frontend_react/src/components/smaChart.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Button, Input } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faChartBar, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Header from \"./header\";\nimport { Table } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SMAChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moveToHome: false,\n      movetoStations: false,\n      stations: [],\n      data: {\n        labels: [\"Time\"],\n        datasets: [{\n          label: 'Real-Time Data',\n          fill: false,\n          lineTension: 0.1,\n          data: [65, 59, 80],\n          backgroundColor: 'rgb(255, 165, 0)',\n          borderColor: 'rgba(255, 165, 0)'\n        }, {\n          label: 'SMA 1-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: [40, 0.5, 0.2],\n          backgroundColor: 'green',\n          borderColor: 'green'\n        }, {\n          label: 'SMA 24-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: [20, 0, 0.8],\n          backgroundColor: 'red',\n          borderColor: 'red'\n        }],\n        hour: '1 HOUR'\n      }\n    };\n  }\n\n  componentDidMount() {\n    let comp = this;\n    let realTimeChartData = this.props.location.state.realTimeChartData;\n    let sma1ChartData = this.props.location.state.sma1ChartData;\n    let sma24ChartData = this.props.location.state.sma24ChartData;\n    let labels = [];\n    let availableDocks = [];\n    let sma1Value = [];\n    let sma24Value = [];\n\n    for (let i = 0; i < realTimeChartData.length; i++) {\n      labels.push(realTimeChartData[i].lastCommunicationTime.toString().substring(11, 19));\n      availableDocks.push(realTimeChartData[i].availableDocks);\n    }\n\n    for (let i = 0; i < sma1ChartData.length; i++) {\n      sma1Value.push(sma1ChartData[i].availableDocks);\n    }\n\n    for (let i = 0; i < sma24ChartData.length; i++) {\n      sma24Value.push(sma24ChartData[i].availableDocks);\n    }\n\n    labels.reverse();\n    availableDocks.reverse();\n    sma1Value.reverse();\n    sma24Value.reverse();\n    comp.setState({\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Real-Time Data',\n          fill: false,\n          lineTension: 0.1,\n          data: availableDocks,\n          backgroundColor: 'rgb(255, 165, 0)',\n          borderColor: 'rgba(255, 165, 0)'\n        }, {\n          label: 'SMA 1-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: sma1Value,\n          backgroundColor: 'green',\n          borderColor: 'green'\n        }, {\n          label: 'SMA 24-hour',\n          fill: false,\n          lineTension: 0.1,\n          data: sma24Value,\n          backgroundColor: 'red',\n          borderColor: 'red'\n        }]\n      }\n    });\n  }\n\n  handleHourChange(e) {\n    let value = e.target.value;\n\n    var axios = require('axios');\n\n    var data = JSON.stringify({\n      \"placeName\": this.props.location.state.stationName,\n      \"timeRange\": value\n    });\n    var config = {\n      method: 'post',\n      url: 'http://localhost:4000/stations/getdocks',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n      let sma1 = movingAverage(response.data, 1);\n      console.log(\"SMA!\", sma1);\n      let sma24 = movingAverage(response.data, 24);\n      comp.setState({\n        realTimeChartData: response.data,\n        moveToSmaChart: true,\n        sma1ChartData: sma1,\n        sma24ChartData: sma24,\n        stationName: key.stationName\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  moveToHomePage() {\n    this.setState({\n      moveToHome: true\n    });\n  }\n\n  moveToListOfStations() {\n    this.setState({\n      movetoStations: true\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.moveToHome ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }, this) : null, this.state.movetoStations ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/list_of_stations\",\n          state: {\n            stations: this.props.location.state.stations,\n            places: this.props.location.state.places,\n            find: this.props.location.state.find,\n            where: this.props.location.state.where\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                backgroundColor: \"#191970\"\n              },\n              onClick: this.moveToHomePage.bind(this),\n              children: [\"Home\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faHome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 160\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 123\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                backgroundColor: \"#191970\"\n              },\n              onClick: this.moveToListOfStations.bind(this),\n              children: [\"Go Back \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faArrowLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 170\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 133\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            style: {\n              padding: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              value: this.state.hour,\n              style: {\n                border: \"none\",\n                borderBottom: \"1px solid black\"\n              },\n              name: \"hour\",\n              onChange: this.handleHourChange.bind(this),\n              placeholder: \"Hour\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1 HOUR\",\n                children: \"Past Hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"24 HOUR\",\n                children: \"Last 24 Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7 DAY\",\n                children: \"Last 7 Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Divvy Dock Station: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: 8,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Line, {\n                    data: this.state.data // Height of graph\n                    ,\n                    height: 600,\n                    options: {\n                      maintainAspectRatio: false,\n                      scales: {\n                        yAxes: [{\n                          scaleLabel: {\n                            display: true,\n                            labelString: 'Available Docks'\n                          },\n                          ticks: {\n                            beginAtZero: true\n                          }\n                        }],\n                        xAxes: [{\n                          scaleLabel: {\n                            display: true,\n                            labelString: 'Time'\n                          }\n                        }]\n                      },\n                      legend: {\n                        labels: {\n                          fontSize: 15\n                        }\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SMAChart;","map":{"version":3,"sources":["/Users/vidyas/Downloads/IIT_Courses/Fall_2021/CSP_584_EWA/Assignments/Bonus_Assign_2/Bonus_Assignment_2_Sudharshana, Vidya/Chicago_SocialHub_React/frontend_react/src/components/smaChart.js"],"names":["React","Component","Row","Col","Button","Input","FontAwesomeIcon","faArrowLeft","faChartBar","faHome","Header","Table","Redirect","Line","SMAChart","constructor","props","state","moveToHome","movetoStations","stations","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","hour","componentDidMount","comp","realTimeChartData","location","sma1ChartData","sma24ChartData","availableDocks","sma1Value","sma24Value","i","length","push","lastCommunicationTime","toString","substring","reverse","setState","handleHourChange","e","value","target","axios","require","JSON","stringify","stationName","config","method","url","headers","then","response","console","log","sma1","movingAverage","sma24","moveToSmaChart","key","catch","error","moveToHomePage","moveToListOfStations","handleChange","name","render","pathname","places","find","where","textAlign","padding","bind","marginLeft","border","borderBottom","maintainAspectRatio","scales","yAxes","scaleLabel","display","labelString","ticks","beginAtZero","xAxes","legend","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Button, Input} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faChartBar, faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Header from \"./header\";\nimport { Table } from \"reactstrap\"\nimport {Redirect} from 'react-router-dom'\nimport { Line } from \"react-chartjs-2\";\n\n\n\n\nclass SMAChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            moveToHome: false,\n            movetoStations: false,\n            stations: [],\n            data: {\n                labels: [\"Time\"],\n                datasets: [\n                  {\n                    label: 'Real-Time Data',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: [65, 59, 80],\n                    backgroundColor: 'rgb(255, 165, 0)',\n                    borderColor: 'rgba(255, 165, 0)',\n                  },\n                  {\n                    label: 'SMA 1-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: [40, 0.5,0.2],\n                    backgroundColor: 'green',\n                    borderColor: 'green',\n                  },\n                  {\n                    label: 'SMA 24-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: [20, 0, 0.8],\n                    backgroundColor: 'red',\n                    borderColor: 'red',\n                  },\n                ],\n                hour: '1 HOUR'\n            }\n        }\n    }\n\n    componentDidMount() {\n        let comp = this\n        let realTimeChartData =  this.props.location.state.realTimeChartData\n        let sma1ChartData =  this.props.location.state.sma1ChartData\n        let sma24ChartData =  this.props.location.state.sma24ChartData\n\n        let labels = []\n        let availableDocks = []\n        let sma1Value = []\n        let sma24Value = []\n\n        for (let i=0; i< realTimeChartData.length; i++) {\n            labels.push(realTimeChartData[i].lastCommunicationTime.toString().substring(11, 19))\n            availableDocks.push(realTimeChartData[i].availableDocks)\n        }\n\n        for (let i=0; i< sma1ChartData.length; i++) {\n            sma1Value.push(sma1ChartData[i].availableDocks)\n        }\n\n        for (let i=0; i< sma24ChartData.length; i++) {\n            sma24Value.push(sma24ChartData[i].availableDocks)\n        }\n\n        labels.reverse()\n        availableDocks.reverse()\n        sma1Value.reverse()\n        sma24Value.reverse()\n\n        comp.setState({\n            data: {\n                labels: labels,\n                datasets: [\n                  {\n                    label: 'Real-Time Data',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: availableDocks,\n                    backgroundColor: 'rgb(255, 165, 0)',\n                    borderColor: 'rgba(255, 165, 0)',\n                  },\n                  {\n                    label: 'SMA 1-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: sma1Value,\n                    backgroundColor: 'green',\n                    borderColor: 'green',\n                  },\n                  {\n                    label: 'SMA 24-hour',\n                    fill: false,\n                    lineTension: 0.1,\n                    data: sma24Value,\n                    backgroundColor: 'red',\n                    borderColor: 'red',\n                  },\n                ],\n            }\n        })\n    }\n\n    handleHourChange(e) {\n        let value = e.target.value\n\n        var axios = require('axios');\n        var data = JSON.stringify({\n        \"placeName\": this.props.location.state.stationName,\n        \"timeRange\": value\n        });\n\n        var config = {\n        method: 'post',\n        url: 'http://localhost:4000/stations/getdocks',\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        data : data\n        };\n\n        axios(config)\n        .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        let sma1 = movingAverage(response.data, 1)\n        console.log(\"SMA!\", sma1)\n        let sma24 = movingAverage(response.data, 24)\n        comp.setState({\n            realTimeChartData: response.data,\n            moveToSmaChart: true,\n            sma1ChartData: sma1,\n            sma24ChartData: sma24,\n            stationName: key.stationName\n        })\n        })\n        .catch(function (error) {\n        console.log(error);\n        });\n    }\n\n    moveToHomePage() {\n        this.setState({\n            moveToHome: true\n        })\n    }\n\n    moveToListOfStations() {\n        this.setState({\n            movetoStations: true\n        })\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.moveToHome? <Redirect to = \"/find\" />: null}\n                {this.state.movetoStations? <Redirect to = {{\n                    pathname: \"/list_of_stations\",\n                    state: { stations: this.props.location.state.stations, places: this.props.location.state.places, find: this.props.location.state.find, where: this.props.location.state.where} \n                }} \n                /> :null }\n                <Header />\n                <div style = {{textAlign: \"left\"}}>\n                    <Row>\n                        <Col md = {2} style = {{padding: \"20px\"}}>\n                            <Button style = {{backgroundColor: \"#191970\"}} onClick = {this.moveToHomePage.bind(this)}>Home<span style = {{marginLeft: \"10px\"}}><FontAwesomeIcon icon = {faHome} /></span></Button>\n                        </Col>\n                        <Col md = {8}></Col>\n                        <Col md = {2} style = {{padding: \"20px\"}}>\n                            <Button style = {{backgroundColor: \"#191970\"}} onClick = {this.moveToListOfStations.bind(this)}>Go Back <span style = {{marginLeft: \"10px\"}}><FontAwesomeIcon icon = {faArrowLeft} /></span></Button>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md = {2} style = {{padding: \"20px\"}}>\n                            <Input type = \"select\" value = {this.state.hour} style = {{border: \"none\", borderBottom: \"1px solid black\"}} name=\"hour\" onChange = {this.handleHourChange.bind(this)}  placeholder = \"Hour\">\n                                <option value = \"1 HOUR\">Past Hour</option>\n                                <option value = \"24 HOUR\">Last 24 Hours</option>\n                                <option value = \"7 DAY\">Last 7 Days</option>\n                            </Input>\n                        </Col>\n                    </Row>\n\n                     <div>\n                     <div style = {{padding: \"20px\"}}>\n                         <h6>Divvy Dock Station: </h6>\n\n                    <Row>\n                        <Col md = {8} xs = {12}>\n                        <div>\n                            <Line\n                            data = {this.state.data}\n                            // Height of graph\n                            height={600}\n                            options={{\n                                maintainAspectRatio: false,\n                                scales: {\n                                yAxes: [\n                                    {\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Available Docks'\n                                        },\n                                        ticks: {\n                                            beginAtZero: true,\n                                        },\n                                    },\n                                    \n                                ],\n                                xAxes: [\n                                    {\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Time'\n                                        },\n                                    }\n                                ]\n                                },\n                                legend: {\n                                labels: {\n                                    fontSize: 15,\n                                },\n                                },\n                            }}\n                            />\n                        </div>\n                        </Col>\n                    </Row>\n                    \n                    </div>\n                    </div>\n                </div >\n            </div>\n\n        );\n    }\n}\n\nexport default (SMAChart);"]},"metadata":{},"sourceType":"module"}